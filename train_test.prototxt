name: "c3d_mini"

# ----- video/label input -----
# ----- for training
layer {
  name: "data"
  type: "Data"
  top: "pair_data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 112
    mirror: true
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
  }
  data_param {
    source: "../LMDB/train"
    backend: LMDB
    batch_size: 7
  }
}

# ----- for validation
layer {
  name: "data"
  type: "Data"
  top: "pair_data"
  top: "label"
  data_param {
    source: "../LMDB/val"
    backend: LMDB
    batch_size: 7
  }
  include {
    phase: TEST
    stage: "test-on-val"
  }
  transform_param {
    crop_size: 112
    mirror: false
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
    mean_value: 63
    mean_value: 71
    mean_value: 86
  }
}

layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data_stacked_fp"
  top: "data_stacked_tp"
  slice_param {
    slice_dim: 1
    slice_point: 48
  }
}

layer {
  name: "reshape_fp"
  type: "Reshape"
  bottom: "data_stacked_fp"
  top: "data_fp"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 3
      dim: 16
      dim: 112 
      dim: 112
    }
  }
}

layer {
  name: "reshape_tp"
  type: "Reshape"
  bottom: "data_stacked_tp"
  top: "data_tp"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 3
      dim: 16
      dim: 112 
      dim: 112
    }
  }
}

# ----- 1st group -----
layer {
  name: "conv1a_fp"
  type: "NdConvolution"
  bottom: "data_fp"
  top: "conv1a_fp"
  param {
    name: "conv1a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a_fp"
  type: "ReLU"
  bottom: "conv1a_fp"
  top: "conv1a_fp"
}
layer {
  name: "pool1_fp"
  type: "NdPooling"
  bottom: "conv1a_fp"
  top: "pool1_fp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 1 dim: 2 dim: 2 }
    stride_shape { dim: 1 dim: 2 dim: 2 }
  }
}

# ----- 2nd group -----
layer {
  name: "conv2a_fp"
  type: "NdConvolution"
  bottom: "pool1_fp"
  top: "conv2a_fp"
  param {
    name: "conv2a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a_fp"
  type: "ReLU"
  bottom: "conv2a_fp"
  top: "conv2a_fp"
}
layer {
  name: "pool2_fp"
  type: "NdPooling"
  bottom: "conv2a_fp"
  top: "pool2_fp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 3rd group -----
layer {
  name: "conv3a_fp"
  type: "NdConvolution"
  bottom: "pool2_fp"
  top: "conv3a_fp"
  param {
    name: "conv3a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a_fp"
  type: "ReLU"
  bottom: "conv3a_fp"
  top: "conv3a_fp"
}
layer {
  name: "pool3_fp"
  type: "NdPooling"
  bottom: "conv3a_fp"
  top: "pool3_fp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 4th group -----
layer {
  name: "conv4a_fp"
  type: "NdConvolution"
  bottom: "pool3_fp"
  top: "conv4a_fp"
  param {
    name: "conv4a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a_fp"
  type: "ReLU"
  bottom: "conv4a_fp"
  top: "conv4a_fp"
}
layer {
  name: "pool4_fp"
  type: "NdPooling"
  bottom: "conv4a_fp"
  top: "pool4_fp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 5th group -----
layer {
  name: "conv5a_fp"
  type: "NdConvolution"
  bottom: "pool4_fp"
  top: "conv5a_fp"
  param {
    name: "conv5a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a_fp"
  type: "ReLU"
  bottom: "conv5a_fp"
  top: "conv5a_fp"
}
layer {
  name: "pool5_fp"
  type: "NdPooling"
  bottom: "conv5a_fp"
  top: "pool5_fp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 1st fc group -----
layer {
  name: "fc6_fp"
  type: "InnerProduct"
  bottom: "pool5_fp"
  top: "fc6_fp"
  param {
    name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_fp"
  type: "ReLU"
  bottom: "fc6_fp"
  top: "fc6_fp"
}
layer {
  name: "drop6_fp"
  type: "Dropout"
  bottom: "fc6_fp"
  top: "fc6_fp"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ----- 2nd fc group -----
layer {
  name: "fc7_fp"
  type: "InnerProduct"
  bottom: "fc6_fp"
  top: "fc7_fp"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_fp"
  type: "ReLU"
  bottom: "fc7_fp"
  top: "fc7_fp"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7_fp"
  top: "fc7_fp"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# ----- 2nd net -------
# ----- 1st group -----
layer {
  name: "conv1a_tp"
  type: "NdConvolution"
  bottom: "data_tp"
  top: "conv1a_tp"
  param {
    name: "conv1a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a_tp"
  type: "ReLU"
  bottom: "conv1a_tp"
  top: "conv1a_tp"
}
layer {
  name: "pool1_tp"
  type: "NdPooling"
  bottom: "conv1a_tp"
  top: "pool1_tp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 1 dim: 2 dim: 2 }
    stride_shape { dim: 1 dim: 2 dim: 2 }
  }
}

# ----- 2nd group -----
layer {
  name: "conv2a_tp"
  type: "NdConvolution"
  bottom: "pool1_tp"
  top: "conv2a_tp"
  param {
    name: "conv2a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a_tp"
  type: "ReLU"
  bottom: "conv2a_tp"
  top: "conv2a_tp"
}
layer {
  name: "pool2_tp"
  type: "NdPooling"
  bottom: "conv2a_tp"
  top: "pool2_tp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 3rd group -----
layer {
  name: "conv3a_tp"
  type: "NdConvolution"
  bottom: "pool2_tp"
  top: "conv3a_tp"
  param {
    name: "conv3a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a_tp"
  type: "ReLU"
  bottom: "conv3a_tp"
  top: "conv3a_tp"
}
layer {
  name: "pool3_tp"
  type: "NdPooling"
  bottom: "conv3a_tp"
  top: "pool3_tp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 4th group -----
layer {
  name: "conv4a_tp"
  type: "NdConvolution"
  bottom: "pool3_tp"
  top: "conv4a_tp"
  param {
    name: "conv4a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a_tp"
  type: "ReLU"
  bottom: "conv4a_tp"
  top: "conv4a_tp"
}
layer {
  name: "pool4_tp"
  type: "NdPooling"
  bottom: "conv4a_tp"
  top: "pool4_tp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 5th group -----
layer {
  name: "conv5a_tp"
  type: "NdConvolution"
  bottom: "pool4_tp"
  top: "conv5a_tp"
  param {
    name: "conv5a_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5a_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a_tp"
  type: "ReLU"
  bottom: "conv5a_tp"
  top: "conv5a_tp"
}
layer {
  name: "pool5_tp"
  type: "NdPooling"
  bottom: "conv5a_tp"
  top: "pool5_tp"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 1st fc group -----
layer {
  name: "fc6_tp"
  type: "InnerProduct"
  bottom: "pool5_tp"
  top: "fc6_tp"
  param {
    name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_tp"
  type: "ReLU"
  bottom: "fc6_tp"
  top: "fc6_tp"
}
layer {
  name: "drop6_tp"
  type: "Dropout"
  bottom: "fc6_tp"
  top: "fc6_tp"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ----- 2nd fc group -----
layer {
  name: "fc7_tp"
  type: "InnerProduct"
  bottom: "fc6_tp"
  top: "fc7_tp"
  param {
    name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_tp"
  type: "ReLU"
  bottom: "fc7_tp"
  top: "fc7_tp"
}
layer {
  name: "drop7_tp"
  type: "Dropout"
  bottom: "fc7_tp"
  top: "fc7_tp"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "fc7_fp"
  bottom: "fc7_tp"
  bottom: "label"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}



