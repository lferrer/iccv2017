I0404 09:58:46.651464 28756 caffe.cpp:210] Use CPU.
I0404 09:58:46.651674 28756 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.003
display: 20
max_iter: 143010
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.005
stepsize: 14301
snapshot: 5000
snapshot_prefix: "c3d_ucf101"
solver_mode: CPU
net: "mini_train_test.prototxt"
train_state {
  level: 0
  stage: ""
}
test_state {
  stage: "test-on-val"
}
I0404 09:58:46.651752 28756 solver.cpp:91] Creating training net from net file: mini_train_test.prototxt
I0404 09:58:46.652024 28756 net.cpp:58] Initializing net from parameters: 
name: "C3D-Mini"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "triplet"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 112
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
    mean_value: 65
    mean_value: 74
    mean_value: 92
  }
  data_param {
    source: "/home/lferrer/Documents/LMDB_MINI/train"
    batch_size: 5
    backend: LMDB
  }
}
layer {
  name: "slicer"
  type: "Slice"
  bottom: "triplet"
  top: "anchor_stacked"
  top: "positive_stacked"
  top: "negative_stacked"
  slice_param {
    slice_dim: 1
    slice_point: 48
    slice_point: 96
  }
}
layer {
  name: "reshape_anchor"
  type: "Reshape"
  bottom: "anchor_stacked"
  top: "anchor"
  reshape_param {
    shape {
      dim: 0
      dim: 3
      dim: 16
      dim: 112
      dim: 112
    }
  }
}
layer {
  name: "reshape_positive"
  type: "Reshape"
  bottom: "positive_stacked"
  top: "positive"
  reshape_param {
    shape {
      dim: 0
      dim: 3
      dim: 16
      dim: 112
      dim: 112
    }
  }
}
layer {
  name: "reshape_negative"
  type: "Reshape"
  bottom: "negative_stacked"
  top: "negative"
  reshape_param {
    shape {
      dim: 0
      dim: 3
      dim: 16
      dim: 112
      dim: 112
    }
  }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "positive"
  bottom: "negative"
}
layer {
  name: "loss"
  type: "TripletLoss"
  bottom: "anchor"
  bottom: "anchor"
  bottom: "anchor"
  top: "loss"
  threshold_param {
    threshold: 1
  }
}
I0404 09:58:46.652097 28756 layer_factory.hpp:77] Creating layer data
I0404 09:58:46.652693 28756 net.cpp:100] Creating Layer data
I0404 09:58:46.652704 28756 net.cpp:408] data -> triplet
I0404 09:58:46.652807 28759 db_lmdb.cpp:35] Opened lmdb /home/lferrer/Documents/LMDB_MINI/train
I0404 09:58:46.655912 28756 data_layer.cpp:41] output data size: 5,144,112,112
I0404 09:58:46.656136 28756 net.cpp:150] Setting up data
I0404 09:58:46.656185 28756 net.cpp:157] Top shape: 5 144 112 112 (9031680)
I0404 09:58:46.656198 28756 net.cpp:165] Memory required for data: 36126720
I0404 09:58:46.656220 28756 layer_factory.hpp:77] Creating layer slicer
I0404 09:58:46.656242 28756 net.cpp:100] Creating Layer slicer
I0404 09:58:46.656271 28756 net.cpp:434] slicer <- triplet
I0404 09:58:46.656291 28756 net.cpp:408] slicer -> anchor_stacked
I0404 09:58:46.656311 28756 net.cpp:408] slicer -> positive_stacked
I0404 09:58:46.656332 28756 net.cpp:408] slicer -> negative_stacked
I0404 09:58:46.656352 28756 net.cpp:150] Setting up slicer
I0404 09:58:46.656366 28756 net.cpp:157] Top shape: 5 48 112 112 (3010560)
I0404 09:58:46.656394 28756 net.cpp:157] Top shape: 5 48 112 112 (3010560)
I0404 09:58:46.656405 28756 net.cpp:157] Top shape: 5 48 112 112 (3010560)
I0404 09:58:46.656417 28756 net.cpp:165] Memory required for data: 72253440
I0404 09:58:46.656488 28756 layer_factory.hpp:77] Creating layer reshape_anchor
I0404 09:58:46.656507 28756 net.cpp:100] Creating Layer reshape_anchor
I0404 09:58:46.656518 28756 net.cpp:434] reshape_anchor <- anchor_stacked
I0404 09:58:46.656556 28756 net.cpp:408] reshape_anchor -> anchor
I0404 09:58:46.656604 28756 net.cpp:150] Setting up reshape_anchor
I0404 09:58:46.656631 28756 net.cpp:157] Top shape: 5 3 16 112 112 (3010560)
I0404 09:58:46.656656 28756 net.cpp:165] Memory required for data: 84295680
I0404 09:58:46.656669 28756 layer_factory.hpp:77] Creating layer anchor_reshape_anchor_0_split
I0404 09:58:46.656683 28756 net.cpp:100] Creating Layer anchor_reshape_anchor_0_split
I0404 09:58:46.656695 28756 net.cpp:434] anchor_reshape_anchor_0_split <- anchor
I0404 09:58:46.656724 28756 net.cpp:408] anchor_reshape_anchor_0_split -> anchor_reshape_anchor_0_split_0
I0404 09:58:46.656741 28756 net.cpp:408] anchor_reshape_anchor_0_split -> anchor_reshape_anchor_0_split_1
I0404 09:58:46.656757 28756 net.cpp:408] anchor_reshape_anchor_0_split -> anchor_reshape_anchor_0_split_2
I0404 09:58:46.656776 28756 net.cpp:150] Setting up anchor_reshape_anchor_0_split
I0404 09:58:46.656790 28756 net.cpp:157] Top shape: 5 3 16 112 112 (3010560)
I0404 09:58:46.656803 28756 net.cpp:157] Top shape: 5 3 16 112 112 (3010560)
I0404 09:58:46.656816 28756 net.cpp:157] Top shape: 5 3 16 112 112 (3010560)
I0404 09:58:46.656826 28756 net.cpp:165] Memory required for data: 120422400
I0404 09:58:46.656837 28756 layer_factory.hpp:77] Creating layer reshape_positive
I0404 09:58:46.656853 28756 net.cpp:100] Creating Layer reshape_positive
I0404 09:58:46.656865 28756 net.cpp:434] reshape_positive <- positive_stacked
I0404 09:58:46.656880 28756 net.cpp:408] reshape_positive -> positive
I0404 09:58:46.656899 28756 net.cpp:150] Setting up reshape_positive
I0404 09:58:46.656914 28756 net.cpp:157] Top shape: 5 3 16 112 112 (3010560)
I0404 09:58:46.656927 28756 net.cpp:165] Memory required for data: 132464640
I0404 09:58:46.656939 28756 layer_factory.hpp:77] Creating layer reshape_negative
I0404 09:58:46.656961 28756 net.cpp:100] Creating Layer reshape_negative
I0404 09:58:46.656985 28756 net.cpp:434] reshape_negative <- negative_stacked
I0404 09:58:46.657001 28756 net.cpp:408] reshape_negative -> negative
I0404 09:58:46.657018 28756 net.cpp:150] Setting up reshape_negative
I0404 09:58:46.657032 28756 net.cpp:157] Top shape: 5 3 16 112 112 (3010560)
I0404 09:58:46.657044 28756 net.cpp:165] Memory required for data: 144506880
I0404 09:58:46.657055 28756 layer_factory.hpp:77] Creating layer silence
I0404 09:58:46.657068 28756 net.cpp:100] Creating Layer silence
I0404 09:58:46.657081 28756 net.cpp:434] silence <- positive
I0404 09:58:46.657094 28756 net.cpp:434] silence <- negative
I0404 09:58:46.657107 28756 net.cpp:150] Setting up silence
I0404 09:58:46.657119 28756 net.cpp:165] Memory required for data: 144506880
I0404 09:58:46.657130 28756 layer_factory.hpp:77] Creating layer loss
I0404 09:58:46.657145 28756 net.cpp:100] Creating Layer loss
I0404 09:58:46.657157 28756 net.cpp:434] loss <- anchor_reshape_anchor_0_split_0
I0404 09:58:46.657171 28756 net.cpp:434] loss <- anchor_reshape_anchor_0_split_1
I0404 09:58:46.657183 28756 net.cpp:434] loss <- anchor_reshape_anchor_0_split_2
I0404 09:58:46.657197 28756 net.cpp:408] loss -> loss
I0404 09:58:46.657222 28756 net.cpp:150] Setting up loss
I0404 09:58:46.657235 28756 net.cpp:157] Top shape: (1)
I0404 09:58:46.657248 28756 net.cpp:160]     with loss weight 1
I0404 09:58:46.657276 28756 net.cpp:165] Memory required for data: 144506884
I0404 09:58:46.657289 28756 net.cpp:228] loss does not need backward computation.
I0404 09:58:46.657306 28756 net.cpp:228] silence does not need backward computation.
I0404 09:58:46.657318 28756 net.cpp:228] reshape_negative does not need backward computation.
I0404 09:58:46.657332 28756 net.cpp:228] reshape_positive does not need backward computation.
I0404 09:58:46.657344 28756 net.cpp:228] anchor_reshape_anchor_0_split does not need backward computation.
I0404 09:58:46.657356 28756 net.cpp:228] reshape_anchor does not need backward computation.
I0404 09:58:46.657368 28756 net.cpp:228] slicer does not need backward computation.
I0404 09:58:46.657382 28756 net.cpp:228] data does not need backward computation.
I0404 09:58:46.657392 28756 net.cpp:270] This network produces output loss
I0404 09:58:46.657410 28756 net.cpp:283] Network initialization done.
I0404 09:58:46.657663 28756 solver.cpp:181] Creating test net (#0) specified by net file: mini_train_test.prototxt
I0404 09:58:46.657701 28756 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0404 09:58:46.657762 28756 net.cpp:58] Initializing net from parameters: 
name: "C3D-Mini"
state {
  phase: TEST
  stage: "test-on-val"
}
layer {
  name: "slicer"
  type: "Slice"
  bottom: "triplet"
  top: "anchor_stacked"
  top: "positive_stacked"
  top: "negative_stacked"
  slice_param {
    slice_dim: 1
    slice_point: 48
    slice_point: 96
  }
}
layer {
  name: "reshape_anchor"
  type: "Reshape"
  bottom: "anchor_stacked"
  top: "anchor"
  reshape_param {
    shape {
      dim: 0
      dim: 3
      dim: 16
      dim: 112
      dim: 112
    }
  }
}
layer {
  name: "reshape_positive"
  type: "Reshape"
  bottom: "positive_stacked"
  top: "positive"
  reshape_param {
    shape {
      dim: 0
      dim: 3
      dim: 16
      dim: 112
      dim: 112
    }
  }
}
layer {
  name: "reshape_negative"
  type: "Reshape"
  bottom: "negative_stacked"
  top: "negative"
  reshape_param {
    shape {
      dim: 0
      dim: 3
      dim: 16
      dim: 112
      dim: 112
    }
  }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "positive"
  bottom: "negative"
}
layer {
  name: "loss"
  type: "TripletLoss"
  bottom: "anchor"
  bottom: "anchor"
  bottom: "anchor"
  top: "loss"
  threshold_param {
    threshold: 1
  }
}
I0502 22:14:51.363607 28586 solver.cpp:337] Iteration 1200, Testing net (#0)
I0502 22:15:20.466855 28586 solver.cpp:404]     Test net output #0: loss = 0.433839 (* 1 = 0.433839 loss)
I0502 22:15:21.372045 28586 solver.cpp:228] Iteration 1200, loss = 0.493098
I0502 22:15:21.372117 28586 solver.cpp:244]     Train net output #0: loss = 0.493094 (* 1 = 0.493094 loss)
I0502 22:15:21.372128 28586 sgd_solver.cpp:106] Iteration 1200, lr = 1e-05
I0502 22:17:37.907474 28586 solver.cpp:228] Iteration 1250, loss = 0.366826
I0502 22:17:37.907722 28586 solver.cpp:244]     Train net output #0: loss = 0.366822 (* 1 = 0.366822 loss)
I0502 22:17:37.907754 28586 sgd_solver.cpp:106] Iteration 1250, lr = 1e-05
I0502 22:19:54.130496 28586 solver.cpp:228] Iteration 1300, loss = 0.257089
I0502 22:19:54.143101 28586 solver.cpp:244]     Train net output #0: loss = 0.257086 (* 1 = 0.257086 loss)
I0502 22:19:54.143126 28586 sgd_solver.cpp:106] Iteration 1300, lr = 1e-05
I0502 22:22:10.177309 28586 solver.cpp:228] Iteration 1350, loss = 0.13418
I0502 22:22:10.178395 28586 solver.cpp:244]     Train net output #0: loss = 0.134176 (* 1 = 0.134176 loss)
I0502 22:22:10.178407 28586 sgd_solver.cpp:106] Iteration 1350, lr = 1e-05
I0502 22:24:23.890291 28586 solver.cpp:454] Snapshotting to binary proto file three_stream_triplet_loss_iter_1400.caffemodel
I0502 22:24:28.721678 28586 sgd_solver.cpp:273] Snapshotting solver state to binary proto file three_stream_triplet_loss_iter_1400.solverstate
I0502 22:24:28.781343 28586 solver.cpp:337] Iteration 1400, Testing net (#0)
I0502 22:24:57.944690 28586 solver.cpp:404]     Test net output #0: loss = 0.411089 (* 1 = 0.411089 loss)
I0502 22:24:58.847496 28586 solver.cpp:228] Iteration 1400, loss = 0.139203
I0502 22:24:58.847553 28586 solver.cpp:244]     Train net output #0: loss = 0.139199 (* 1 = 0.139199 loss)
